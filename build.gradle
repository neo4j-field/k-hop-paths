plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id "com.github.breadmoirai.github-release" version "2.2.12"
}

group 'org.neo4j.field'
version 'khoppaths'

sourceCompatibility = 11

repositories {
    mavenCentral()
/*
    maven {
        url "http://m2.neo4j.com/enterprise"
        credentials {
            // define user and password in your $HOME/.gradle/gradle.properties
            username neo4j_enterprise_user
            password neo4j_enterprise_password
        }
        authentication {
            basic(BasicAuthentication)
        }
    }
*/
    maven {
        url "http://m2.neo4j.com/enterprise-sources"
        credentials {
            // define user and password in your $HOME/.gradle/gradle.properties
            username neo4j_enterprise_sources_user
            password neo4j_enterprise_sources_password
        }
        authentication {
            basic(BasicAuthentication)
        }
    }
}

ext {
    neo4jVersion = "4.1.2"
    junitJupiterVersion = '5.7.0'
}

dependencies {

    compileOnly group: 'com.neo4j', name: 'neo4j-auth-plugin-api', version: neo4jVersion
    compileOnly group: 'org.neo4j', name: 'neo4j-kernel', version: neo4jVersion
    compileOnly group: 'org.neo4j', name: 'neo4j-configuration', version: neo4jVersion

    testImplementation group: "org.junit.jupiter", name:"junit-jupiter-api", version: junitJupiterVersion
    testImplementation group: "org.junit.jupiter", name:"junit-jupiter-params", version: junitJupiterVersion
    testImplementation group: 'org.hamcrest', name:'hamcrest-library', version: '2.2'
    //testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    testImplementation group: 'com.neo4j.test', name: 'neo4j-harness-enterprise', version: neo4jVersion
    testImplementation group: 'org.neo4j.driver', name: 'neo4j-java-driver', version: '4.1.1'

}

test {
    useJUnitPlatform()
}

githubRelease {
    token github_token // add personal github token from ~/.gralde/gradle.properties
    body changelog {
        lastCommit 'HEAD~2' // to be removed
    } // by default this is empty
    owner "neo4j-field"
    repo "neo4j-oauth2"
    draft true // by default this is false
    prerelease true // by default this is false
    releaseAssets jar

//    overwrite false // by default false; if set to true, will delete an existing release with the same tag and name
    //dryRun true // by default false; you can use this to see what actions would be taken without making a release
}
